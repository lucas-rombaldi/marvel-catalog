{"version":3,"sources":["components/shared/theme.scss","img/thanos.png","img/marvel-logo.png","components/CharacterList/CharacterCard/styles.scss","components/CharacterList/styles.scss","components/shared/layout/InnerToolbar/styles.scss","components/CharacterDialog/styles.scss","components/CharacterDetails/SerieCard/styles.scss","components/CharacterDetails/styles.scss","components/shared/layout/TopBar/styles.scss","components/App/App.scss","serviceWorker.js","store/reducers/marvelReducer.js","store/actions/tourTypes.js","store/reducers/tourReducer.js","store/reducers/rootReducer.js","store/actions/types.js","store/configureStore.js","components/CharacterList/CharacterList.tour.js","store/actions/tourActions.js","components/shared/TourHOC/TourHOC.js","config/config.js","services/marvelApi.js","components/shared/constants.js","store/actions/appActions.js","components/CharacterList/CharacterCard/constants.js","components/CharacterList/CharacterCard/CharacterCard.js","components/shared/Loader/Loader.js","components/shared/ErrorPage/constants.js","components/shared/ErrorPage/ErrorPage.js","components/CharacterList/constants.js","components/CharacterList/CharacterList.js","components/shared/layout/InnerToolbar/constants.js","components/shared/layout/InnerToolbar/InnerToolbar.js","components/CharacterDialog/constants.js","components/CharacterDialog/CharacterDialog.js","components/CharacterDetails/SerieCard/constants.js","components/CharacterDetails/SerieCard/SerieCard.js","components/CharacterDetails/constants.js","components/CharacterDetails/CharacterDetails.js","components/shared/layout/TopBar/constants.js","components/shared/layout/TopBar/TopBar.js","components/App/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","INITIAL_STATE","characters","character","hasMore","isLoading","dialogVisible","warning","error","data","total","count","offset","isTourOpen","rootReducer","combineReducers","marvel","newState","state","action","type","errorMessage","isChangingFilter","actionResults","payload","results","some","x","concat","sort","a","b","name","length","index","localChar","localStorage","getItem","id","currentCharacter","JSON","parse","series","isLoadingSeries","code","status","newSeries","seriesPage","page","visible","enableFilter","filter","tour","form","reduxFormReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Name","Steps","content","selector","initializeTour","dispatch","exploredTours","includes","pathname","closeTour","setItem","stringify","marvelApi","MarvelApi","origOptions","defaultOptions","nameStartsWith","options","Object","assign","URI","currentOffset","params","this","getBaseParams","url","config","fetch","characterId","timeStamp","moment","unix","hash","CryptoJS","MD5","toString","enc","Hex","constants","localCharacterStoragePrefix","fetchAllCharactersAction","receiveAllCharactersAction","json","fetchCharacterAction","receiveCharacterAction","errorAction","message","setFilter","setDialogVisibleAction","setDialogVisible","fetchAllCharacters","getCharacters","response","fetchCharacter","AppConstants","localContent","getCharacterById","resetCharactersAction","resetCharacters","enableToolbarFilterAction","enableToolbarFilter","disableToolbarFilterAction","disableToolbarFilter","fetchSeriesByCharacterAction","receiveSeriesByCharacterAction","fetchSeriesByCharacter","class","CharacterCard","props","image","thumbnail","path","extension","to","data-testid","className","Constants","style","backgroundImage","classnames","available","comics","React","Component","Loader","color","Theme","secondaryColor","height","width","ErrorPage","src","FailLogo","alt","Typography","variant","CharacterList","renderCharacters","loading","map","key","appActions","loadMore","loader","TourHOC","WrappedComponent","_onRequestClose","tourActions","Fragment","steps","isOpen","onRequestClose","connect","bindActionCreators","Tour","InnerToolbar","renderActions","renderInfo","backRoute","title","children","_renderInnerToolbar","_renderContent","withRouter","CharacterDialog","renderTextField","input","label","meta","touched","custom","errorState","TextField","fullWidth","margin","onSubmit","values","handleConfirm","Dialog","open","onClose","handleClose","aria-labelledby","handleSubmit","DialogTitle","DialogContent","Field","component","autoFocus","multiline","rows","DialogActions","Button","onClick","initialValues","reduxForm","validate","errors","forEach","field","enableReinitialize","SerieCard","serie","urls","find","href","display","description","CharacterDetails","loadModel","loadSeries","showDialog","handleCloseDialog","handleConfirmDialog","renderSeriesGrid","renderLoadMoreSeriesButton","renderSeriesTitle","align","marginLeft","renderSeries","renderToolbarActions","endIcon","renderProfile","renderDialog","renderPage","currentSeriesPage","TopBar","handleFilterChangeDebounce","_","debounce","appliedFilter","searchText","handleFilterChange","event","setState","target","value","renderSearch","placeholder","autoComplete","onChange","renderAppTitle","Logo","AppBar","position","Toolbar","App","exact","store","createStore","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","500","primaryColor","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.eb512fac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#1976d2\",\"secondaryColor\":\"#e62429\"};","module.exports = __webpack_public_path__ + \"static/media/thanos.972da349.png\";","module.exports = __webpack_public_path__ + \"static/media/marvel-logo.44b2fa2f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#1976d2\",\"secondaryColor\":\"#e62429\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#1976d2\",\"secondaryColor\":\"#e62429\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#1976d2\",\"secondaryColor\":\"#e62429\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#1976d2\",\"secondaryColor\":\"#e62429\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#1976d2\",\"secondaryColor\":\"#e62429\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#1976d2\",\"secondaryColor\":\"#e62429\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#1976d2\",\"secondaryColor\":\"#e62429\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#1976d2\",\"secondaryColor\":\"#e62429\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  FETCH_ALL_CHARACTERS,\r\n  RECEIVE_ALL_CHARACTERS,\r\n  FETCH_CHARACTER,\r\n  RECEIVE_CHARACTER,\r\n  SET_FILTER,\r\n  ENABLE_FILTER,\r\n  DISABLE_FILTER,\r\n  FETCH_SERIES_BY_CHARACTER,\r\n  RECEIVE_SERIES_BY_CHARACTER,\r\n  SET_DIALOG_VISIBLE,\r\n  RESET_CHARACTERS,\r\n  ERROR\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  characters: null,\r\n  character: null,\r\n  hasMore: true,\r\n  isLoading: false,\r\n  dialogVisible: false,\r\n  warning: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  let newState;\r\n\r\n  switch (action.type) {\r\n    case ERROR:\r\n      newState = {\r\n        ...state,\r\n        error: action.errorMessage,\r\n      };\r\n      return newState;\r\n\r\n    case FETCH_ALL_CHARACTERS:\r\n      newState = {\r\n        ...state,\r\n        isLoading: true,\r\n        isChangingFilter: false,\r\n        warning: null,\r\n      };\r\n      return newState;\r\n\r\n    case RECEIVE_ALL_CHARACTERS:\r\n      let actionResults = action.payload.data.results;\r\n      if (state.characters && state.characters.some((x) => x)) {\r\n        actionResults = state.characters.concat(actionResults);\r\n      }\r\n\r\n      newState = {\r\n        ...state,\r\n        characters: actionResults.sort((a, b) =>\r\n          a.name < b.name ? -1 : a.name > b.name ? 1 : 0\r\n        ),\r\n        hasMore: hasMore(action.payload.data),\r\n        isLoading: false,\r\n        isChangingFilter: false,\r\n        warning:\r\n          actionResults && actionResults.length === 0\r\n            ? \"No hero found! Try searching again...\"\r\n            : null,\r\n      };\r\n\r\n      // Merges characters with local data\r\n      for (let index = 0; index < newState.characters.length; index++) {\r\n        const character = newState.characters[index];\r\n        let localChar = localStorage.getItem(\r\n          `marvel-catalog.character.${character.id}`\r\n        );\r\n        if (localChar) {\r\n          let currentCharacter = newState.characters[index];\r\n          newState.characters[index] = JSON.parse(localChar);\r\n          newState.characters[index].series = currentCharacter.series;\r\n        }\r\n      }\r\n\r\n      return newState;\r\n\r\n    case FETCH_CHARACTER:\r\n      return {\r\n        ...state,\r\n        character: {\r\n          isLoadingSeries: true,\r\n        },\r\n        isLoading: true,\r\n        isChangingFilter: false,\r\n        warning: null,\r\n      };\r\n\r\n    case RECEIVE_CHARACTER:\r\n      newState = {\r\n        ...state,\r\n        character: action.character.data.results[0],\r\n        isLoading: false,\r\n        isChangingFilter: false,\r\n      };\r\n      newState.character.isLoadingSeries = true;\r\n      newState.character.series = null;\r\n\r\n      return newState;\r\n\r\n    case FETCH_SERIES_BY_CHARACTER:\r\n      return {\r\n        ...state,\r\n        character: {\r\n          ...state.character,\r\n          isLoadingSeries: true,\r\n        },\r\n      };\r\n\r\n    case RECEIVE_SERIES_BY_CHARACTER:\r\n      if (action.payload.code !== \"200\" && action.payload.code !== 200) {\r\n        newState = {\r\n          ...state,\r\n          warning: `Sorry! There was an error retrieving the series (${action.payload.status})`,\r\n        };\r\n        return newState;\r\n      }\r\n\r\n      let newSeries = action.payload.data.results;\r\n\r\n      if (\r\n        state.character &&\r\n        state.character.series &&\r\n        state.character.series.some((x) => x)\r\n      ) {\r\n        newSeries = state.character.series.concat(newSeries);\r\n      }\r\n\r\n      newState = {\r\n        ...state,\r\n        character: {\r\n          ...state.character,\r\n          series: newSeries,\r\n          hasMore: hasMore(action.payload.data),\r\n          seriesPage: action.page,\r\n          isLoadingSeries: false,\r\n        },\r\n        error: null,\r\n      };\r\n      return newState;\r\n\r\n    case RESET_CHARACTERS:\r\n      return {\r\n        ...state,\r\n        characters: null,\r\n        hasMore: true,\r\n      };\r\n\r\n    case SET_DIALOG_VISIBLE:\r\n      return {\r\n        ...state,\r\n        dialogVisible: action.visible,\r\n      };\r\n\r\n    case ENABLE_FILTER:\r\n      return {\r\n        ...state,\r\n        enableFilter: true,\r\n      };\r\n\r\n    case DISABLE_FILTER:\r\n      return {\r\n        ...state,\r\n        enableFilter: false,\r\n      };\r\n\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        characters: null,\r\n        filter: action.filter,\r\n        isChangingFilter: true,\r\n        hasMore: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction hasMore(data) {\r\n  const { total, count, offset } = data;\r\n  return offset + count < total;\r\n}\r\n","export const INITIALIZE_TOUR = 'INITIALIZE_TOUR';\r\nexport const CLOSE_TOUR = 'CLOSE_TOUR';","import { CLOSE_TOUR, INITIALIZE_TOUR } from \"../actions/tourTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  isTourOpen: true,\r\n};\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  let newState;\r\n\r\n  switch (action.type) {\r\n    case INITIALIZE_TOUR:\r\n      newState = {\r\n        ...state,\r\n        isTourOpen: action.isTourOpen,\r\n      };\r\n      return newState;\r\n\r\n    case CLOSE_TOUR:\r\n      newState = {\r\n        ...state,\r\n        isTourOpen: false,\r\n      };\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as reduxFormReducer } from \"redux-form\";\r\nimport marvel from \"./marvelReducer\";\r\nimport tour from \"./tourReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  marvel,\r\n  tour,\r\n  form: reduxFormReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export const FETCH_ALL_CHARACTERS = 'FETCH_ALL_CHARACTERS';\r\nexport const RECEIVE_ALL_CHARACTERS = 'RECEIVE_ALL_CHARACTERS';\r\nexport const FETCH_CHARACTER = 'FETCH_CHARACTER';\r\nexport const RECEIVE_CHARACTER = 'RECEIVE_CHARACTER';\r\nexport const FETCH_SERIES_BY_CHARACTER = 'FETCH_SERIES_BY_CHARACTER';\r\nexport const RECEIVE_SERIES_BY_CHARACTER = 'RECEIVE_SERIES_BY_CHARACTER';\r\nexport const RESET_CHARACTERS = 'RESET_CHARACTERS';\r\nexport const SET_FILTER = 'SET_FILTER';\r\nexport const ENABLE_FILTER = 'ENABLE_FILTER';\r\nexport const DISABLE_FILTER = 'DISABLE_FILTER';\r\nexport const SET_DIALOG_VISIBLE = 'SET_DIALOG_VISIBLE';\r\nexport const ERROR = 'ERROR';","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore() {\r\n  return createStore(\r\n    rootReducer,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst tour = {\r\n  Name: \"CharacterList\",\r\n  Steps: [\r\n    {\r\n      content: () => (\r\n        <div>\r\n          <p>Welcome to the Marvel Catalog!</p>\r\n          <p>\r\n            Here, you're going to find all the marvel characters, beyond\r\n            exploring their details and customizing them!\r\n          </p>\r\n          <p>Enjoy!</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      selector: \".topbar__search--input-inner\",\r\n      content: () => (\r\n        <div>\r\n          <p>Here, you can search for a specific character!</p>\r\n          <p>Just type and wait for the results to be refreshed!</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      selector: \".char-card__root\",\r\n      content: () => (\r\n        <div>\r\n          <p>\r\n            Here, you have a character card, where you can see a little summary\r\n            about him!\r\n          </p>\r\n          <p>You may want to click it to get his details page...</p>\r\n        </div>\r\n      ),\r\n    },\r\n  ],\r\n};\r\n\r\nexport default tour;\r\n","import * as types from \"./tourTypes\";\r\n\r\nconst _localStorageKey = \"marvel-catalog.exploredTours\";\r\n\r\nexport function initializeTour() {\r\n  return async (dispatch) => {\r\n    let isTourOpen = true;\r\n    const exploredTours = JSON.parse(localStorage.getItem(_localStorageKey));\r\n    if (exploredTours && exploredTours.includes(window.location.pathname))\r\n      isTourOpen = false;\r\n\r\n    dispatch({ type: types.INITIALIZE_TOUR, isTourOpen: isTourOpen });\r\n  };\r\n}\r\n\r\nexport function closeTour() {\r\n  return async (dispatch) => {\r\n    dispatch({ type: types.CLOSE_TOUR });\r\n    localStorage.setItem(\r\n      _localStorageKey,\r\n      JSON.stringify([window.location.pathname])\r\n    );\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Tour from \"reactour\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport * as tourActions from \"../../../store/actions/tourActions\";\r\n\r\nexport const TourHOC = (WrappedComponent, tour) => {\r\n  class TourHOC extends Component {\r\n    componentDidMount() {\r\n      const { tourActions } = this.props;\r\n      tourActions.initializeTour();\r\n    }\r\n\r\n    _onRequestClose = () => {\r\n      const { tourActions } = this.props;\r\n      tourActions.closeTour();\r\n    };\r\n\r\n    render() {\r\n      const { isTourOpen } = this.props;\r\n\r\n      return (\r\n        <React.Fragment>\r\n          {isTourOpen && (\r\n            <Tour\r\n              steps={tour.Steps}\r\n              isOpen={isTourOpen}\r\n              onRequestClose={this._onRequestClose}\r\n            />\r\n          )}\r\n          <WrappedComponent {...this.props} />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  TourHOC.propTypes = {\r\n    tourActions: PropTypes.object,\r\n    isTourOpen: PropTypes.bool,\r\n  };\r\n\r\n  function mapStateToProps(state) {\r\n    return {\r\n      isTourOpen: state.tour.isTourOpen,\r\n    };\r\n  }\r\n\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      tourActions: bindActionCreators(tourActions, dispatch),\r\n    };\r\n  }\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(TourHOC);\r\n};\r\n","export const marvelApi = {\r\n  publicKey: 'ebfed38e4e08f777f181a6c414f521eb',\r\n  privateKey: '2c724f0c19fc3556825c4f7da0952c7839452cc8',\r\n    baseUrl: 'https://gateway.marvel.com:443',\r\n  }\r\n  ","import CryptoJS from \"crypto-js\";\r\nimport moment from \"moment\";\r\nimport { marvelApi as config } from \"../config/config\";\r\n\r\nexport default class MarvelApi {\r\n  static getCharacters(origOptions = {}) {\r\n    const defaultOptions = { page: 0, count: 15, nameStartsWith: \"\" };\r\n    const options = Object.assign(defaultOptions, origOptions);\r\n\r\n    const URI = \"/v1/public/characters\";\r\n    const currentOffset =\r\n      options.page === 1 ? 0 : options.count * (options.page - 1);\r\n\r\n    let params = `${this.getBaseParams()}&limit=${\r\n      options.count\r\n    }&offset=${currentOffset}`;\r\n\r\n    if (options.nameStartsWith) {\r\n      params = params.concat(`&nameStartsWith=${options.nameStartsWith}`);\r\n    }\r\n\r\n    const url = `${config.baseUrl}${URI}${params}`;\r\n\r\n    return fetch(url);\r\n  }\r\n\r\n  static fetchSeriesByCharacter(characterId, page) {\r\n    const count = 10;\r\n    const currentOffset = page === 1 ? 0 : count * (page - 1);\r\n\r\n    const URI = `/v1/public/characters/${characterId}/series`;\r\n    const params = `${this.getBaseParams()}&limit=${count}&offset=${currentOffset}`;\r\n    const url = `${config.baseUrl}${URI}${params}`;\r\n    \r\n    return fetch(url);\r\n  }\r\n\r\n  static getCharacterById(id) {\r\n    const URI = `/v1/public/characters/${id}`;\r\n    const url = `${config.baseUrl}${URI}${this.getBaseParams()}`;\r\n    return fetch(url);\r\n  }\r\n\r\n  static getBaseParams() {\r\n    const timeStamp = moment().unix();\r\n    const hash = CryptoJS.MD5(\r\n      timeStamp + config.privateKey + config.publicKey\r\n    ).toString(CryptoJS.enc.Hex);\r\n\r\n    return `?apikey=${config.publicKey}&ts=${timeStamp}&hash=${hash}`;\r\n  }\r\n}\r\n","const constants = {\r\n    localCharacterStoragePrefix: 'marvel-catalog.character.'\r\n}\r\nexport default constants;","import * as types from \"./types\";\r\nimport MarvelApi from \"../../services/marvelApi\";\r\nimport AppConstants from \"../../components/shared/constants\";\r\n\r\nexport const fetchAllCharactersAction = () => ({\r\n  type: types.FETCH_ALL_CHARACTERS,\r\n});\r\n\r\nexport const receiveAllCharactersAction = (json) => ({\r\n  type: types.RECEIVE_ALL_CHARACTERS,\r\n  payload: json,\r\n});\r\n\r\nexport const fetchCharacterAction = () => ({\r\n  type: types.FETCH_CHARACTER,\r\n});\r\n\r\nexport const receiveCharacterAction = (character) => ({\r\n  type: types.RECEIVE_CHARACTER,\r\n  character,\r\n});\r\n\r\nexport const errorAction = (message) => ({\r\n  type: types.ERROR,\r\n  errorMessage: message,\r\n});\r\n\r\nexport function setFilter(filter) {\r\n  return (dispatch) =>\r\n    dispatch({\r\n      type: types.SET_FILTER,\r\n      filter: filter,\r\n    });\r\n}\r\n\r\nexport const setDialogVisibleAction = (visible) => ({\r\n  type: types.SET_DIALOG_VISIBLE,\r\n  visible,\r\n});\r\n\r\nexport function setDialogVisible(visible) {\r\n  return (dispatch) => {\r\n    return dispatch(setDialogVisibleAction(visible));\r\n  };\r\n}\r\n\r\nexport function fetchAllCharacters(page, filter) {\r\n  return async (dispatch) => {\r\n    dispatch(fetchAllCharactersAction());\r\n\r\n    try {\r\n      const response = await MarvelApi.getCharacters({\r\n        page: page,\r\n        nameStartsWith: filter,\r\n      });\r\n      const json = await response.json();\r\n      return dispatch(receiveAllCharactersAction(json));\r\n    } catch (e) {\r\n      return dispatch(\r\n        errorAction(`Sorry! There was a problem fetching the characters (${e})`)\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport function fetchCharacter(id) {\r\n  return async (dispatch) => {\r\n    dispatch(fetchCharacterAction());\r\n\r\n    let localChar = localStorage.getItem(\r\n      `${AppConstants.localCharacterStoragePrefix}${id}`\r\n    );\r\n\r\n    try {\r\n      if (localChar) {\r\n        const localContent = {\r\n          data: {\r\n            results: [JSON.parse(localChar)],\r\n          },\r\n        };\r\n        return dispatch(receiveCharacterAction(localContent));\r\n      } else {\r\n        const response = await MarvelApi.getCharacterById(id);\r\n        const json = await response.json();\r\n        return dispatch(receiveCharacterAction(json));\r\n      }\r\n    } catch (e) {\r\n      return dispatch(\r\n        errorAction(`Sorry! There was a problem fetching the character (${e})`)\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport const resetCharactersAction = () => ({\r\n  type: types.RESET_CHARACTERS,\r\n});\r\n\r\nexport function resetCharacters() {\r\n  return (dispatch) => dispatch(resetCharactersAction());\r\n}\r\n\r\nexport const enableToolbarFilterAction = () => ({\r\n  type: types.ENABLE_FILTER,\r\n});\r\n\r\nexport function enableToolbarFilter() {\r\n  return (dispatch) => dispatch(enableToolbarFilterAction());\r\n}\r\n\r\nexport const disableToolbarFilterAction = () => ({\r\n  type: types.DISABLE_FILTER,\r\n});\r\n\r\nexport function disableToolbarFilter() {\r\n  return (dispatch) => dispatch(disableToolbarFilterAction());\r\n}\r\n\r\nexport const fetchSeriesByCharacterAction = () => ({\r\n  type: types.FETCH_SERIES_BY_CHARACTER,\r\n});\r\n\r\nexport const receiveSeriesByCharacterAction = (json, page) => ({\r\n  type: types.RECEIVE_SERIES_BY_CHARACTER,\r\n  payload: json,\r\n  page,\r\n});\r\n\r\nexport function fetchSeriesByCharacter(id, page) {\r\n  return async (dispatch) => {\r\n    dispatch(fetchSeriesByCharacterAction());\r\n\r\n    const response = await MarvelApi.fetchSeriesByCharacter(id, page);\r\n    const json = await response.json();\r\n    return dispatch(receiveSeriesByCharacterAction(json, page));\r\n  };\r\n}\r\n","const constants = {\r\n    class: \"char-card\"\r\n}\r\n\r\nexport default constants;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\nimport Constants from \"./constants\";\r\nimport \"./styles.scss\";\r\n\r\nclass CharacterCard extends React.Component {\r\n  render() {\r\n    const { character } = this.props;\r\n    const image = `${character.thumbnail.path}/standard_fantastic.${this.props.character.thumbnail.extension}`;\r\n\r\n    return (\r\n      <Link to={`/${character.id}`} data-testid=\"char-card\">\r\n        <div className={`${Constants.class}__root`}>\r\n          <div className={`${Constants.class}__card`}>\r\n            <div\r\n              className={`${Constants.class}__image`}\r\n              style={{ backgroundImage: `url(${image})` }}\r\n            />\r\n            <div\r\n              className={`${Constants.class}__title`}\r\n              data-testid=\"char-card-name\"\r\n            >\r\n              {character.name}\r\n            </div>\r\n            <div\r\n              className={classnames(\r\n                `${Constants.class}__card-units`,\r\n                \"clearfix\"\r\n              )}\r\n            >\r\n              <div className={`${Constants.class}__card-units--unit`}>\r\n                <div className={`${Constants.class}__card-units--unit-value`}>\r\n                  {character.series.available}\r\n                </div>\r\n                <div className={`${Constants.class}__card-units--unit-name`}>\r\n                  Series\r\n                </div>\r\n              </div>\r\n              <div\r\n                className={classnames(\r\n                  `${Constants.class}__card-units--unit`,\r\n                  \"no-border-right\"\r\n                )}\r\n              >\r\n                <div className={`${Constants.class}__card-units--unit-value`}>\r\n                  {character.comics.available}\r\n                </div>\r\n                <div className={`${Constants.class}__card-units--unit-name`}>\r\n                  Comics\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nCharacterCard.propTypes = {\r\n  character: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoaderSpinner from \"react-loader-spinner\";\r\nimport Theme from '../theme.scss';\r\n\r\nclass Loader extends React.Component {\r\n  render() {\r\n    const { type, visible } = this.props;\r\n\r\n    return (\r\n      <LoaderSpinner\r\n        type={type || \"ThreeDots\"}\r\n        color={Theme.secondaryColor}\r\n        height={70}\r\n        width={70}\r\n        visible={visible}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLoader.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default Loader;","const constants = {\r\n  class: \"error-screen\",\r\n};\r\n\r\nexport default constants;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport FailLogo from \"../../../img/thanos.png\";\r\nimport Constants from \"./constants\";\r\nimport \"./styles.scss\";\r\n\r\nclass ErrorPage extends React.Component {\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <div className={`${Constants.class}__root`} data-testid=\"error-page\">\r\n        <img\r\n          className={`${Constants.class}__image`}\r\n          src={FailLogo}\r\n          alt={message}\r\n        />\r\n        <Typography type=\"subheading\" variant=\"h6\" color=\"inherit\">\r\n          {message}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nErrorPage.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default ErrorPage;\r\n","const constants = {\r\n    class: \"char-list\"\r\n}\r\n\r\nexport default constants;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\n\r\nimport Tour from \"./CharacterList.tour\";\r\nimport { TourHOC } from \"../shared/TourHOC/TourHOC\";\r\nimport * as appActions from \"../../store/actions/appActions\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport Loader from \"../shared/Loader\";\r\nimport ErrorPage from \"../shared/ErrorPage\";\r\nimport Constants from \"./constants\";\r\nimport \"./styles.scss\";\r\n\r\nclass CharacterList extends React.Component {\r\n  componentDidMount() {\r\n    const { enableToolbarFilter, resetCharacters } = this.props.appActions;\r\n\r\n    enableToolbarFilter();\r\n    resetCharacters();\r\n  }\r\n\r\n  renderCharacters = () => {\r\n    if (\r\n      this.props.loading ||\r\n      !this.props.characters ||\r\n      this.props.characters.length === 0\r\n    )\r\n      return null;\r\n\r\n    return this.props.characters.map((character) => (\r\n      <div key={character.id}>\r\n        <CharacterCard character={character} />\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    const { hasMore, appActions, warning, error, isLoading } = this.props;\r\n    const { fetchAllCharacters } = appActions;\r\n\r\n    if (error || warning) return <ErrorPage message={error || warning} />;\r\n\r\n    return (\r\n      <InfiniteScroll\r\n        data-testid=\"infinite-scroller\"\r\n        loadMore={(page) =>\r\n          fetchAllCharacters(\r\n            this.props.isChangingFilter ? 1 : page,\r\n            this.props.filter\r\n          )\r\n        }\r\n        hasMore={hasMore}\r\n        loader={\r\n          <div\r\n            className={`${Constants.class}__loader`}\r\n            key=\"loader\"\r\n            data-testid=\"loader\"\r\n          >\r\n            <Loader visible={isLoading} />\r\n          </div>\r\n        }\r\n      >\r\n        <div className={`${Constants.class}__cards-container`}>\r\n          {this.renderCharacters()}\r\n        </div>\r\n      </InfiniteScroll>\r\n    );\r\n  }\r\n}\r\n\r\nCharacterList.propTypes = {\r\n  appActions: PropTypes.object,\r\n  characters: PropTypes.array,\r\n  hasMore: PropTypes.bool,\r\n  isLoading: PropTypes.bool,\r\n  filter: PropTypes.string,\r\n  isChangingFilter: PropTypes.bool,\r\n  warning: PropTypes.string,\r\n  error: PropTypes.string,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    characters: state.marvel.isChangingFilter ? null : state.marvel.characters,\r\n    hasMore: state.marvel.hasMore,\r\n    isLoading: state.marvel.isLoading,\r\n    filter: state.marvel.filter,\r\n    isChangingFilter: state.marvel.isChangingFilter,\r\n    warning: state.marvel.warning,\r\n    error: state.marvel.error,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    appActions: bindActionCreators(appActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default TourHOC(\r\n  connect(mapStateToProps, mapDispatchToProps)(CharacterList),\r\n  Tour\r\n);\r\n","const constants = {\r\n    class: \"inner-toolbar\"\r\n}\r\n\r\nexport default constants;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nimport Constants from \"./constants\";\r\nimport \"./styles.scss\";\r\n\r\nclass InnerToolbar extends React.Component {\r\n  renderActions = () => {\r\n    const { renderActions } = this.props;\r\n\r\n    if (renderActions) {\r\n      return (\r\n        <div className={`${Constants.class}__actions`}>{renderActions()}</div>\r\n      );\r\n    } else return null;\r\n  }\r\n\r\n  renderInfo = () => {\r\n    const { backRoute, title } = this.props;\r\n\r\n    return (\r\n      <div className={`${Constants.class}__info`}>\r\n        {backRoute && (\r\n          <Link to={backRoute}>\r\n            <ArrowBackIosIcon />\r\n          </Link>\r\n        )}\r\n        <Typography variant=\"h5\">\r\n          <span className={`${Constants.class}__title`}>{title}</span>\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _renderInnerToolbar() {\r\n    return (\r\n      <div className={`${Constants.class}__root`}>\r\n        {this.renderInfo()}\r\n        {this.renderActions()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _renderContent() {\r\n    return (\r\n      <div className={`${Constants.class}__content`}>{this.props.children}</div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this._renderInnerToolbar()}\r\n        {this._renderContent()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nInnerToolbar.propTypes = {\r\n  children: PropTypes.node,\r\n  renderActions: PropTypes.func,\r\n  backRoute: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default withRouter(InnerToolbar);\r\n","const constants = {\r\n    class: \"char-dialog\"\r\n}\r\n\r\nexport default constants;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport Constants from \"./constants\";\r\nimport AppConstants from \"../shared/constants\";\r\nimport \"./styles.scss\";\r\n\r\nclass CharacterDialog extends React.Component {\r\n  renderTextField = ({ input, label, meta: { touched, error }, ...custom }) => {\r\n    const errorState = Boolean(touched && error);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <TextField\r\n          error={errorState}\r\n          {...input}\r\n          {...custom}\r\n          label={label}\r\n          fullWidth\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n        />\r\n        {errorState && (\r\n          <p className={`${Constants.class}__error-text`}>{error}</p>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  onSubmit = (values) => {\r\n    const { character, handleConfirm } = this.props;\r\n\r\n    localStorage.setItem(\r\n      `${AppConstants.localCharacterStoragePrefix}${character.id}`,\r\n      JSON.stringify(values)\r\n    );\r\n\r\n    handleConfirm();\r\n  };\r\n\r\n  render() {\r\n    const { character } = this.props;\r\n\r\n    let image;\r\n    if (character && character.thumbnail)\r\n      image = `${character.thumbnail.path}/standard_fantastic.${this.props.character.thumbnail.extension}`;\r\n\r\n    return (\r\n      <Dialog\r\n        open={this.props.visible}\r\n        onClose={this.props.handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n          <DialogTitle id=\"form-dialog-title\">Character Edition</DialogTitle>\r\n          <DialogContent className={`${Constants.class}__content`}>\r\n            <div className={`${Constants.class}__row`}>\r\n              <img\r\n                src={image}\r\n                alt={character.name}\r\n                className={`${Constants.class}__image`}\r\n              />\r\n            </div>\r\n            <Field\r\n              name=\"name\"\r\n              component={this.renderTextField}\r\n              label=\"Name\"\r\n              autoFocus\r\n            />\r\n            <Field\r\n              name=\"description\"\r\n              component={this.renderTextField}\r\n              label=\"Description\"\r\n              multiline\r\n              rows={6}\r\n            />\r\n          </DialogContent>\r\n          <div className={`${Constants.class}__actions`}>\r\n            <DialogActions>\r\n              <Button onClick={this.props.handleClose}>Cancel</Button>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Confirm\r\n              </Button>\r\n            </DialogActions>\r\n          </div>\r\n        </form>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nCharacterDialog.propTypes = {\r\n  visible: PropTypes.bool,\r\n  handleClose: PropTypes.func,\r\n  handleConfirm: PropTypes.func,\r\n  character: PropTypes.object,\r\n};\r\n\r\nfunction validate(values) {\r\n  const errors = {};\r\n  const requiredFields = [\"name\"];\r\n\r\n  requiredFields.forEach((field) => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\";\r\n    }\r\n  });\r\n\r\n  return errors;\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    initialValues: { ...props.character },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(\r\n  reduxForm({\r\n    form: \"characterForm\",\r\n    validate,\r\n    enableReinitialize: true,\r\n  })(CharacterDialog)\r\n);\r\n","const constants = {\r\n    class: \"serie-card\"\r\n}\r\n\r\nexport default constants;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Constants from \"./constants\";\r\nimport \"./styles.scss\";\r\n\r\nclass SerieCard extends React.Component {\r\n  render() {\r\n    const { serie } = this.props;\r\n\r\n    const image = `${serie.thumbnail.path}/standard_fantastic.${serie.thumbnail.extension}`;\r\n    const url = serie.urls.find((url) => url.type === \"detail\").url;\r\n\r\n    return (\r\n      <a href={url}>\r\n        <div className={`${Constants.class}__root`}>\r\n          <div\r\n            className={`${Constants.class}__image`}\r\n            style={{ backgroundImage: `url(${image})` }}\r\n          ></div>\r\n          <div className={`${Constants.class}__info`}>\r\n            <Typography variant=\"button\" display=\"block\">\r\n              <strong>{serie.title}</strong>\r\n            </Typography>\r\n            <div className={`${Constants.class}__info--description`}>\r\n              <Typography variant=\"caption\" display=\"block\">\r\n                {serie.description}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nSerieCard.propTypes = {\r\n  serie: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SerieCard;","const constants = {\r\n    class: 'char-details'\r\n}\r\n\r\nexport default constants;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport * as appActions from \"../../store/actions/appActions\";\r\nimport InnerToolbar from \"../shared/layout/InnerToolbar\";\r\nimport Loader from \"../shared/Loader\";\r\nimport ErrorPage from \"../shared/ErrorPage\";\r\nimport CharacterDialog from \"../CharacterDialog\";\r\nimport SerieCard from \"./SerieCard\";\r\n\r\nimport Constants from \"./constants\";\r\nimport \"./styles.scss\";\r\n\r\nclass CharacterDetails extends React.Component {\r\n  componentDidMount() {\r\n    this.props.appActions.disableToolbarFilter();\r\n    this.loadModel(this.id);\r\n  }\r\n\r\n  get id() {\r\n    return this.props.match.params.id;\r\n  }\r\n\r\n  loadModel = (id) => {\r\n    this.props.appActions.fetchCharacter(id);\r\n    this.loadSeries(1);\r\n  };\r\n\r\n  showDialog = () => {\r\n    const { appActions } = this.props;\r\n    appActions.setDialogVisible(true);\r\n  };\r\n\r\n  handleCloseDialog = () => {\r\n    const { appActions } = this.props;\r\n    appActions.setDialogVisible(false);\r\n  };\r\n\r\n  loadSeries = (page) => {\r\n    const { appActions } = this.props;\r\n    appActions.fetchSeriesByCharacter(this.id, page);\r\n  };\r\n\r\n  handleConfirmDialog = () => {\r\n    const { appActions } = this.props;\r\n    appActions.setDialogVisible(false);\r\n    this.loadModel(this.id);\r\n  };\r\n\r\n  renderSeriesGrid = () => {\r\n    const { character } = this.props;\r\n\r\n    if (character.series && character.series.length > 0) {\r\n      return (\r\n        <div className={`${Constants.class}__series-grid`}>\r\n          {this.props.character.series.map((serie) => (\r\n            <SerieCard serie={serie} key={serie.id} />\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Typography variant=\"button\">\r\n          Unfortunately, no serie has been done so far!\r\n        </Typography>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderLoadMoreSeriesButton = () => {\r\n    const { character, seriesPage } = this.props;\r\n\r\n    if (character.hasMore)\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"backgroundColor--primary\"\r\n          onClick={() => this.loadSeries(seriesPage + 1)}\r\n        >\r\n          Load More...\r\n        </Button>\r\n      );\r\n    else return null;\r\n  };\r\n\r\n  renderSeriesTitle = () => {\r\n    return (\r\n      <div className={`${Constants.class}__series-title`}>\r\n        <Typography variant=\"h6\" align=\"left\">\r\n          <span style={{ marginLeft: \"10px\" }}>Series</span>\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSeries = () => {\r\n    const { character, isLoadingSeries } = this.props;\r\n\r\n    return (\r\n      <section className={`${Constants.class}__series-root`}>\r\n        {this.renderSeriesTitle()}\r\n        {character.series && (\r\n          <React.Fragment>\r\n            {this.renderSeriesGrid()}\r\n            {!isLoadingSeries && this.renderLoadMoreSeriesButton()}\r\n          </React.Fragment>\r\n        )}\r\n        {isLoadingSeries && <Loader visible />}\r\n      </section>\r\n    );\r\n  };\r\n\r\n  renderToolbarActions = () => {\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={this.showDialog}\r\n        endIcon={<EditIcon />}\r\n      >\r\n        Edit\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  renderProfile = () => {\r\n    const { character } = this.props;\r\n    const image = `${character.thumbnail.path}/standard_fantastic.${this.props.character.thumbnail.extension}`;\r\n\r\n    return (\r\n      <div className={`${Constants.class}__profile`}>\r\n        <img\r\n          src={image}\r\n          alt={character.name}\r\n          className={`${Constants.class}__image`}\r\n        />\r\n        <div className={`${Constants.class}__description`}>\r\n          <Typography variant=\"h5\" display=\"block\">\r\n            {character.name}\r\n          </Typography>\r\n          <Typography variant=\"overline\" display=\"block\">\r\n            {character.description.length > 0\r\n              ? character.description\r\n              : \"NO DESCRIPTION FOR THIS HERO! CAN YOU TELL US SOMETHING ABOUT HIM/HER?\"}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderDialog = () => {\r\n    return (\r\n      <CharacterDialog\r\n        visible={this.props.dialogVisible}\r\n        handleClose={this.handleCloseDialog}\r\n        character={this.props.character}\r\n        handleConfirm={this.handleConfirmDialog}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderPage = () => {\r\n    const { character, error, warning } = this.props;\r\n\r\n    if (error || warning) return <ErrorPage message={error || warning} />;\r\n\r\n    return (\r\n      <InnerToolbar\r\n        backRoute=\"/\"\r\n        title={character.name}\r\n        renderActions={this.renderToolbarActions}\r\n      >\r\n        <React.Fragment>\r\n          {this.renderProfile()}\r\n          {this.renderSeries()}\r\n        </React.Fragment>\r\n      </InnerToolbar>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { character } = this.props;\r\n\r\n    if (this.props.error) {\r\n      return <ErrorPage message={this.props.error} />;\r\n    }\r\n\r\n    return character && character.name ? (\r\n      <React.Fragment>\r\n        {this.renderDialog()}\r\n        {this.renderPage()}\r\n      </React.Fragment>\r\n    ) : (\r\n      <Loader visible />\r\n    );\r\n  }\r\n}\r\n\r\nCharacterDetails.propTypes = {\r\n  character: PropTypes.object,\r\n  isLoading: PropTypes.bool,\r\n  isLoadingSeries: PropTypes.bool,\r\n  seriesPage: PropTypes.number,\r\n  dialogVisible: PropTypes.bool,\r\n  warning: PropTypes.string,\r\n  error: PropTypes.string,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    character: state.marvel.character,\r\n    isLoadingSeries:\r\n      state.marvel.character && state.marvel.character.isLoadingSeries,\r\n    error: state.marvel.error,\r\n    warning: state.marvel.warning,\r\n    seriesPage: state.marvel.character\r\n      ? state.marvel.character.seriesPage\r\n      : this.currentSeriesPage,\r\n    dialogVisible: state.marvel.dialogVisible,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    appActions: bindActionCreators(appActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(CharacterDetails)\r\n);\r\n","const constants = {\r\n    class: 'topbar'\r\n};\r\n\r\nexport default constants;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport _ from \"lodash\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport * as appActions from \"../../../../store/actions/appActions\";\r\nimport Constants from \"./constants\";\r\nimport Logo from \"../../../../img/marvel-logo.png\";\r\nimport \"./styles.scss\";\r\n\r\nclass TopBar extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchText: \"\",\r\n    };\r\n    this.appliedFilter = null;\r\n  }\r\n\r\n  handleFilterChangeDebounce = _.debounce(() => {\r\n    if (this.appliedFilter !== this.state.searchText) {\r\n      this.appliedFilter = this.state.searchText;\r\n      this.props.appActions.setFilter(this.state.searchText);\r\n    }\r\n  }, 800);\r\n\r\n  handleFilterChange = (event) => {\r\n    this.setState({ searchText: event.target.value });\r\n    this.handleFilterChangeDebounce();\r\n  };\r\n\r\n  renderSearch = () => {\r\n    const { enableFilter } = this.props;\r\n\r\n    if (!enableFilter) return null;\r\n\r\n    return (\r\n      <div className={`${Constants.class}__search`} data-testid=\"search-container\">\r\n        <div className={`${Constants.class}__search--image`}>\r\n          <SearchIcon />\r\n        </div>\r\n        <div className={`${Constants.class}__search--input`}>\r\n          <input\r\n            name=\"search\"\r\n            value={this.state.searchText}\r\n            type=\"text\"\r\n            className={`${Constants.class}__search--input-inner`}\r\n            placeholder={\"Search...\"}\r\n            autoComplete=\"off\"\r\n            onChange={this.handleFilterChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAppTitle = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <img\r\n          className={`${Constants.class}__logo`}\r\n          src={Logo}\r\n          height={32}\r\n          alt={\"Marvel Catalog\"}\r\n        />\r\n        <Typography\r\n          type=\"subheading\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          className={`${Constants.class}__title`}\r\n        >\r\n          Marvel Catalog\r\n        </Typography>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`${Constants.class}__root`}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            {this.renderAppTitle()}\r\n            {this.renderSearch()}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopBar.propTypes = {\r\n  appActions: PropTypes.object,\r\n  enableFilter: PropTypes.bool,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    enableFilter: state.marvel.enableFilter,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    appActions: bindActionCreators(appActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport CharacterList from \"../CharacterList\";\nimport CharacterDetails from \"../CharacterDetails\";\nimport TopBar from \"../shared/layout/TopBar\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopBar />\n      <div className=\"App-content\">\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\" exact component={CharacterList} />\n            <Route path=\"/:id\" component={CharacterDetails} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './store/configureStore';\nimport App from './components/App/App';\nimport Theme from \"./components/shared/theme.scss\";\nimport './index.css';\n\nconst store = configureStore();\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { 500: Theme.primaryColor },\n  },\n});\n\nrender(\n  <Provider store={store}>\n    <MuiThemeProvider theme={theme}>\n      <App />\n      </MuiThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}